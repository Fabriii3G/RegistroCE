EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
main.exe -- emu8086 assembler version: 4.08  
 
[ 3/9/2025  --  02:06:43 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ; ---------------------------------------------------------
[   2]        :                                       ; main.asm 16-bit .EXE (MASM/TASM)
[   3]        :                                       ; ---------------------------------------------------------
[   4]        :                                       
[   5]        :                                       .MODEL small
[   6]        :                                       .STACK 100h
[   7]        :                                       
[   8]        :                                       ; Constantes / EQU que puedan usar datos o codigo
[   9]        :                                       INCLUDE const.inc
[  10]        :                                       
[  11]        :                                       .DATA
[  12]    0100: 0D 0A 7C 52 65 67 69 73 74 72 6F 43   INCLUDE messages.inc     ; cadenas (terminadas en '$' para ah=09h)
                45 7C 0D 0A 24 31 2E 20 49 6E 67 72 
                65 73 61 72 20 63 61 6C 69 66 69 63 
                61 63 69 6F 6E 65 73 0D 0A 24 32 2E 
                20 4D 6F 73 74 72 61 72 20 65 73 74 
                61 64 69 73 74 69 63 61 73 0D 0A 24 
                33 2E 20 42 75 73 63 61 72 20 65 73 
                74 75 64 69 61 6E 74 65 0D 0A 24 34 
                2E 20 4F 72 64 65 6E 61 72 20 63 61 
                6C 69 66 69 63 61 63 69 6F 6E 65 73 
                0D 0A 24 35 2E 20 53 61 6C 69 72 0D 
                0A 24 0D 0A 53 65 6C 65 63 63 69 6F 
                6E 65 20 75 6E 61 20 6F 70 63 69 6F 
                6E 3A 20 24 0D 0A 48 61 20 65 6C 65 
                67 69 64 6F 3A 20 24 0D 0A 50 72 65 
                73 69 6F 6E 65 20 75 6E 61 20 74 65 
                63 6C 61 20 70 61 72 61 20 63 6F 6E 
                74 69 6E 75 61 72 2E 2E 2E 0D 0A 24 
                0D 0A 47 72 61 63 69 61 73 20 70 6F 
                72 20 75 73 61 72 20 52 65 67 69 73 
                74 72 6F 43 45 21 0D 0A 24 0D 0A 50 
                6F 72 20 66 61 76 6F 72 20 69 6E 67 
                72 65 73 65 20 73 75 20 65 73 74 75 
                64 69 61 6E 74 65 20 28 4E 6F 6D 62 
                72 65 20 41 70 65 6C 6C 69 64 6F 31 
                20 41 70 65 6C 6C 69 64 6F 32 20 4E 
                6F 74 61 29 0D 0A 4F 20 64 69 67 69 
                74 65 20 39 20 70 61 72 61 20 73 61 
                6C 69 72 20 61 6C 20 6D 65 6E 75 20 
                70 72 69 6E 63 69 70 61 6C 0D 0A 24 
                0D 0A 4E 6F 74 61 20 69 6E 76 61 6C 
                69 64 61 3A 20 66 6F 72 6D 61 74 6F 
                20 69 6E 63 6F 72 72 65 63 74 6F 20 
                28 75 73 65 20 65 6E 74 65 72 6F 20 
                6F 20 64 65 63 69 6D 61 6C 20 63 6F 
                6E 20 68 61 73 74 61 20 35 20 64 65 
                63 69 6D 61 6C 65 73 29 2E 0D 0A 24 
                0D 0A 4E 6F 74 61 20 66 75 65 72 61 
                20 64 65 20 72 61 6E 67 6F 3A 20 64 
                65 62 65 20 65 73 74 61 72 20 65 6E 
                74 72 65 20 30 20 79 20 31 30 30 20 
                28 31 30 30 2E 30 30 30 30 30 20 70 
                65 72 6D 69 74 69 64 6F 29 2E 0D 0A 
                24 0D 0A 45 73 74 75 64 69 61 6E 74 
                65 20 61 67 72 65 67 61 64 6F 21 20 
                50 72 65 73 69 6F 6E 65 20 63 75 61 
                6C 71 75 69 65 72 20 74 65 63 6C 61 
                20 70 61 72 61 20 63 6F 6E 74 69 6E 
                75 61 72 2E 0D 0A 24 0D 0A 43 61 70 
                61 63 69 64 61 64 20 6D 61 78 69 6D 
                61 20 28 31 35 20 65 73 74 75 64 69 
                61 6E 74 65 73 29 20 61 6C 63 61 6E 
                7A 61 64 61 2E 0D 0A 24 0D 0A 4E 6F 
                74 61 20 6D 61 78 69 6D 61 3A 0D 0A 
                24 0D 0A 4E 6F 74 61 20 6D 69 6E 69 
                6D 61 3A 0D 0A 24 0D 0A 43 61 6E 74 
                69 64 61 64 20 64 65 20 65 73 74 75 
                64 69 61 6E 74 65 73 20 61 70 72 6F 
                62 61 64 6F 73 3A 20 24 0D 0A 43 61 
                6E 74 69 64 61 64 20 64 65 20 65 73 
                74 75 64 69 61 6E 74 65 73 20 72 65 
                70 72 6F 62 61 64 6F 73 3A 20 24 0D 
                0A 50 6F 72 63 65 6E 74 61 6A 65 20 
                61 70 72 6F 62 61 64 6F 73 3A 20 24 
                0D 0A 50 6F 72 63 65 6E 74 61 6A 65 
                20 72 65 70 72 6F 62 61 64 6F 73 3A 
                20 24 0D 0A 49 6E 67 72 65 73 65 20 
                65 6C 20 69 6E 64 69 63 65 20 64 65 
                6C 20 65 73 74 75 64 69 61 6E 74 65 
                20 28 31 2E 2E 31 35 29 3A 20 0D 0A 
                24 0D 0A 4E 6F 20 68 61 79 20 65 73 
                74 75 64 69 61 6E 74 65 73 20 67 75 
                61 72 64 61 64 6F 73 2E 0D 0A 24 0D 
                0A 45 6E 74 72 61 64 61 20 69 6E 76 
                61 6C 69 64 61 3A 20 64 65 62 65 20 
                73 65 72 20 75 6E 20 6E 75 6D 65 72 
                6F 20 65 6E 74 65 72 6F 2E 0D 0A 24 
                0D 0A 49 6E 64 69 63 65 20 66 75 65 
                72 61 20 64 65 20 72 61 6E 67 6F 2E 
                0D 0A 24 0D 0A 45 6E 74 72 61 64 61 
                20 69 6E 76 61 6C 69 64 61 3A 20 64 
                65 62 65 20 69 6E 67 72 65 73 61 72 
                20 4E 6F 6D 62 72 65 20 79 20 64 6F 
                73 20 41 70 65 6C 6C 69 64 6F 73 20 
                61 6E 74 65 73 20 64 65 20 6C 61 20 
                6E 6F 74 61 2E 0D 0A 24 0D 0A 49 6E 
                64 69 71 75 65 20 63 6F 6D 6F 20 64 
                65 73 65 61 20 6F 72 64 65 6E 61 72 
                20 6C 61 73 20 63 61 6C 69 66 69 63 
                61 63 69 6F 6E 65 73 3A 0D 0A 24 0D 
                0A 31 2E 20 41 73 63 65 6E 64 65 6E 
                74 65 0D 0A 24 0D 0A 32 2E 20 44 65 
                73 63 65 6E 64 65 6E 74 65 0D 0A 24 
                0D 0A 43 61 6C 69 66 69 63 61 63 69 
                6F 6E 65 73 20 6F 72 64 65 6E 61 64 
                61 73 20 28 61 73 63 65 6E 64 65 6E 
                74 65 29 3A 0D 0A 24 0D 0A 43 61 6C 
                69 66 69 63 61 63 69 6F 6E 65 73 20 
                6F 72 64 65 6E 61 64 61 73 20 28 64 
                65 73 63 65 6E 64 65 6E 74 65 29 3A 
                0D 0A 24 0D 0A 53 65 20 72 65 71 75 
                69 65 72 65 6E 20 61 6C 20 6D 65 6E 
                6F 73 20 32 20 65 73 74 75 64 69 61 
                6E 74 65 73 20 70 61 72 61 20 6F 72 
                64 65 6E 61 72 2E 0D 0A 24 0D 0A 50 
                72 65 73 69 6F 6E 65 20 6C 61 20 74 
                65 63 6C 61 20 31 20 6F 20 32 0D 0A 
                24 0D 0A 50 72 65 73 69 6F 6E 65 20 
                75 6E 61 20 74 65 63 6C 61 20 70 61 
                72 61 20 63 6F 6E 74 69 6E 75 61 72 
                0D 0A 24 00                         
[  13]        :                                       INCLUDE data.inc         ; variables (ej. 'opcion', contadores, etc.)
[  14]        :                                       
[  15]        :                                       .CODE
[  16]        :                                       ; Procedimientos auxiliares (impresion, CLS, etc.)
[  17]    0BC0: B4 09 CD 21 C3 50 53 51 52 33 C9 BB   INCLUDE ui.inc
                0A 00 33 D2 F7 F3 52 41 3D 00 00 75 
                F5 5A 80 C2 30 B4 02 CD 21 E2 F6 5A 
                59 5B 58 C3 B8 00 06 B7 07 B9 00 00 
                BA 4F 18 CD 10 B4 02 B7 00 BA 00 00 
                CD 10 C3 B4 02 B2 0D CD 21 B2 0A CD 
                21 C3                               
[  18]        :                                       ; Procedimientos del proyecto (ingresar, buscar, ordenar, etc.)
[  19]        :                                       INCLUDE students.inc
[  20]        :                                       
[  21]        :                                       
[  22]        :                                       ; --------- Punto de entrada ---------
[  23]    125E:                                       main PROC
[  24]    125E: B8 10 00                              mov ax, @data
[  25]    1261: 8E D8                                 mov ds, ax
[  26]    1263: 8E C0                                 mov  es, ax
[  27]        :                                       
[  28]    1265: E8 80 F9                              call Cls
[  29]        :                                       
[  30]    1268:                                       MainLoop:
[  31]    1268: E8 7D F9                              call Cls
[  32]    126B: E8 05 00                              call MostrarMenu
[  33]    126E: E8 2D 00                              call LeerOpcion
[  34]    1271: EB F5                                 jmp  MainLoop         ; NO volver a "main" (evita reinit DS)
[  35]        :                                       main ENDP
[  36]        :                                       
[  37]        :                                       ; ---------- UI / Menú ----------
[  38]    1273:                                       MostrarMenu PROC
[  39]    1273: BA 00 00                              mov dx, offset titulo
[  40]    1276: E8 47 F9                              call PrintString
[  41]    1279: BA 11 00                              mov dx, offset op1
[  42]    127C: E8 41 F9                              call PrintString
[  43]    127F: BA 2E 00                              mov dx, offset op2
[  44]    1282: E8 3B F9                              call PrintString
[  45]    1285: BA 48 00                              mov dx, offset op3
[  46]    1288: E8 35 F9                              call PrintString
[  47]    128B: BA 5F 00                              mov dx, offset op4
[  48]    128E: E8 2F F9                              call PrintString
[  49]    1291: BA 7B 00                              mov dx, offset op5
[  50]    1294: E8 29 F9                              call PrintString
[  51]    1297: BA 86 00                              mov dx, offset elegir
[  52]    129A: E8 23 F9                              call PrintString
[  53]    129D: C3                                    ret
[  54]        :                                       MostrarMenu ENDP
[  55]        :                                       
[  56]        :                                       ; ---------- Lógica de opciones ----------
[  57]    129E:                                       LeerOpcion PROC
[  58]    129E: B4 01                                 mov ah, 01h
[  59]    12A0: CD 21                                 int 21h
[  60]    12A2: A2 B0 0A                              mov opcion, al
[  61]        :                                       
[  62]    12A5: 3C 31                                 cmp al, '1'
[  63]    12A7: 75 03 E9 5E F9                        je  IngresarCalificaciones
[  64]        :                                       
[  65]    12AC: 3C 32                                 cmp al, '2'
[  66]    12AE: 75 03 E9 D5 FB                        je  MostrarEstadisticas
[  67]        :                                       
[  68]    12B3: 3C 33                                 cmp al, '3'
[  69]    12B5: 75 03 E9 09 FE                        je  BuscarPorIndice
[  70]        :                                       
[  71]    12BA: 3C 34                                 cmp al, '4'
[  72]    12BC: 75 03 E9 A4 FE                        je  OrdenarCalificacionesMenu
[  73]        :                                       
[  74]    12C1: 3C 35                                 cmp al, '5'
[  75]    12C3: 74 15                                 je  Salir
[  76]        :                                       
[  77]        :                                       ; Mensaje de opción inválida
[  78]    12C5: BA A0 00                              mov dx, offset salto
[  79]    12C8: E8 F5 F8                              call PrintString
[  80]    12CB: 8A 16 B0 0A                           mov dl, opcion
[  81]    12CF: B4 02                                 mov ah, 02h
[  82]    12D1: CD 21                                 int 21h
[  83]    12D3: BA AF 00                              mov dx, offset salto2
[  84]    12D6: E8 E7 F8                              call PrintString
[  85]    12D9: C3                                    ret
[  86]        :                                       LeerOpcion ENDP
[  87]        :                                       
[  88]        :                                       ; ---------- Salir limpio a DOS ----------
[  89]    12DA:                                       Salir PROC
[  90]    12DA: BA D8 00                              mov dx, offset mensajeSalir
[  91]    12DD: E8 E0 F8                              call PrintString
[  92]    12E0: B8 00 4C                              mov ax, 4C00h
[  93]    12E3: CD 21                                 int 21h
[  94]        :                                       Salir ENDP
[  95]        :                                       
[  96]        :                                       END main
[  97]        :                                       
[  98]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: E5      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 0B      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 0F      -   check sum (l.byte)
0013: 6A      -   check sum (h.byte)
0014: 9E      -   IP - instruction pointer (l.byte)
0015: 06      -   IP - instruction pointer (h.byte)
0016: BC      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 9F      -   relocation table - offset inside segment (l.byte)
001F: 06      -   relocation table - offset inside segment (h.byte)
0020: BC      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
